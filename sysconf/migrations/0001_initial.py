# -*- coding: utf-8 -*-
# Generated by Django 1.11.14 on 2020-05-30 15:26
from __future__ import unicode_literals

from django.db import migrations, models
import mirage.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ossconf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='名称')),
                ('description', models.CharField(max_length=500, verbose_name='描述信息')),
                ('accessKey', models.CharField(max_length=500, verbose_name='oss访问key')),
                ('accessSecret', mirage.fields.EncryptedCharField(max_length=500, verbose_name='oss访问secret')),
                ('endPoint', models.CharField(max_length=500, verbose_name='oss endpoint')),
                ('bucketName', models.CharField(max_length=500, verbose_name='bucketname')),
            ],
        ),
        migrations.CreateModel(
            name='sys_alarm_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='告警名称')),
                ('alarm_type', models.IntegerField(verbose_name='告警方式')),
                ('alarm_content', models.TextField(verbose_name='告警内容')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='sys_mailserver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='邮件服务器')),
                ('description', models.CharField(max_length=500, verbose_name='描述信息')),
                ('server_type', models.CharField(max_length=32, verbose_name='邮件服务器类型')),
                ('mail_server', models.CharField(max_length=100, verbose_name='邮件服务器地址')),
                ('smtp_port', models.IntegerField(verbose_name='smtp端口')),
                ('protocol', models.CharField(max_length=32, verbose_name='smtp协议')),
                ('mailusername', models.CharField(max_length=300, verbose_name='邮件发送者')),
                ('mailpasswd', mirage.fields.EncryptedCharField(max_length=300, verbose_name='邮件密码')),
            ],
        ),
        migrations.CreateModel(
            name='sys_menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='菜单标题')),
                ('code', models.CharField(max_length=300, null=True, verbose_name='菜单权限标识')),
                ('path', models.CharField(max_length=300, verbose_name='路由URL')),
                ('routerName', models.CharField(max_length=300, verbose_name='路由名称')),
                ('component', models.CharField(max_length=300, null=True, verbose_name='component地址')),
                ('redirect', models.CharField(max_length=300, null=True, verbose_name='重定向地址')),
                ('target', models.CharField(max_length=300, null=True, verbose_name='连接跳转目标')),
                ('parentId', models.IntegerField(verbose_name='父级菜单ID')),
                ('icon', models.CharField(max_length=120, null=True, verbose_name='图标')),
                ('sort', models.IntegerField(null=True, verbose_name='排序值，用于菜单排序')),
                ('KeepAlive', models.IntegerField(choices=[(0, '关闭'), (1, '开启')], default=1, verbose_name='0-关闭，1- 开启')),
                ('type', models.IntegerField(choices=[(0, '菜单'), (1, '按钮')], default=0, verbose_name='菜单类型 （0-菜单 1-按钮')),
                ('hidden', models.IntegerField(choices=[(0, '否'), (1, '是')], default=0, verbose_name='是否隐藏路由: 0-否,1-是')),
                ('deleted', models.IntegerField(choices=[(0, '删除'), (1, '正常')], default=1, verbose_name='逻辑删除 0-删除， 1-正常')),
                ('createTime', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
        ),
        migrations.CreateModel(
            name='sys_role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, unique=True, verbose_name='用户名')),
                ('code', models.CharField(max_length=100, null=True, verbose_name='显示名称')),
                ('note', models.CharField(max_length=100, null=True, verbose_name='显示名称')),
                ('deleted', models.IntegerField(choices=[(0, 'normal'), (1, 'deleted')], db_index=True, verbose_name='删除状态，锁定 正常')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
        ),
        migrations.CreateModel(
            name='sys_role_menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_id', models.IntegerField(verbose_name='角色ID')),
                ('permission_id', models.IntegerField(verbose_name='菜单ID')),
            ],
        ),
        migrations.CreateModel(
            name='sys_user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, null=True, unique=True, verbose_name='用户名')),
                ('nickname', models.CharField(max_length=100, null=True, verbose_name='显示名称')),
                ('password', mirage.fields.EncryptedCharField(max_length=100, null=True, verbose_name='显示名称')),
                ('salt', models.CharField(max_length=100, null=True, verbose_name='MD5密码盐')),
                ('avatar', models.CharField(max_length=100, null=True, verbose_name='头像')),
                ('gender', models.IntegerField(choices=[(0, 'Male'), (1, 'Female')], verbose_name='性别')),
                ('email', models.CharField(max_length=100, null=True, verbose_name='电子邮箱')),
                ('phone', models.CharField(max_length=100, null=True, verbose_name='电话')),
                ('status', models.IntegerField(choices=[(0, 'normal'), (1, 'locked')], db_index=True, verbose_name='用户状态，锁定 正常')),
                ('deleted', models.IntegerField(choices=[(0, 'normal'), (1, 'deleted')], db_index=True, verbose_name='删除状态，锁定 正常')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
        ),
        migrations.CreateModel(
            name='sys_user_role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(verbose_name='用户ID')),
                ('role_id', models.IntegerField(verbose_name='角色ID')),
            ],
        ),
        migrations.CreateModel(
            name='sys_webhoook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='webhook名称')),
                ('webhook_url', models.CharField(max_length=300, verbose_name='webhook地址')),
                ('keyword', models.CharField(max_length=100, verbose_name='安全信息自定义关键字')),
                ('label', models.CharField(max_length=100, verbose_name='加签')),
                ('ip_range', models.CharField(max_length=100, verbose_name='ip段')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(verbose_name='更新时间')),
            ],
        ),
    ]
